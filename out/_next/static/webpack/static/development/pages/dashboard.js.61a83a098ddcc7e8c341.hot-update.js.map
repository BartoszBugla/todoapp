{"version":3,"file":"static/webpack/static\\development\\pages\\dashboard.js.61a83a098ddcc7e8c341.hot-update.js","sources":["webpack:///./redux/actions/authActions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from \"./types\";\r\nimport { returnErrors } from \"./errorActions\";\r\n// Check token & load user\r\nexport const loadUser = (token) => (dispatch) => {\r\n    // User loading\r\n\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n        .post(\"/users\", {}, tokenConfig(token))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data,\r\n                token: token,\r\n            });\r\n        })\r\n        .catch((err) => {});\r\n};\r\nexport const register = (items) => (dispatch) => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    // Request body\r\n    //always check it out\r\n    const body = JSON.stringify(items);\r\n\r\n    axios\r\n        .post(\"/users/register\", body, config)\r\n        .then((res) =>\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data,\r\n            })\r\n        )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n            });\r\n            if (err) dispatch(returnErrors(err.response.data));\r\n        });\r\n};\r\n// Login User\r\nexport const login = (payload) => (dispatch) => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // Request body\r\n    const body = JSON.stringify(payload);\r\n\r\n    axios\r\n        .post(\"/users/login\", body, config)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            });\r\n            if (err) dispatch(returnErrors(err.response.data));\r\n        });\r\n};\r\n// Logout User\r\nexport const logout = (type) => {\r\n    console.log(\"action\");\r\n    return {\r\n        type: LOGOUT_SUCCESS,\r\n    };\r\n};\r\n// Setup config/headers and token\r\nexport const tokenConfig = (token) => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token;\r\n    }\r\n\r\n    return config;\r\n};\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAUA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAdA;AAeA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AAMA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAFA;AADA;AAOA;AACA;AADA;AAGA;AACA;AACA;AAzBA;AACA;AA0BA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AACA;AAMA;AAEA;AAGA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AA1BA;AACA;AA2BA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}