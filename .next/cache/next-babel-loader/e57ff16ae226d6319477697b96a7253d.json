{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//dev\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch, connect } from \"react-redux\"; //items\n\nimport FormItem from \"../dumb/formItem\";\nimport SubmitButton from \"../dumb/SubmitButton\";\nimport Select from \"../dumb/Select\";\nimport Todo from \"../dumb/Todo\"; //actions\n\nimport { CLOSE_MODAL, UPDATE_MODAL } from \"../../redux/actions/types\";\nimport { addTodo } from \"../../redux/actions/todosActions\";\nimport { useForms } from \"../../customHooks/formHook\";\nconst BG = styled.div.withConfig({\n  displayName: \"AddTodoModal__BG\",\n  componentId: \"sc-1wbi0hq-0\"\n})([\"background-color:rgba(0,0,0,0.5);position:absolute;top:0;left:0;width:100vw;height:100vh;\"]);\nconst Container = styled.div.withConfig({\n  displayName: \"AddTodoModal__Container\",\n  componentId: \"sc-1wbi0hq-1\"\n})([\"position:absolute;top:0;left:0;width:100vw;height:100vh;\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"AddTodoModal__Form\",\n  componentId: \"sc-1wbi0hq-2\"\n})([\"width:50%;margin:auto;& > *{margin-top:20px;}display:flex;flex-direction:column;align-items:center;\"]);\nconst Box = styled.div.withConfig({\n  displayName: \"AddTodoModal__Box\",\n  componentId: \"sc-1wbi0hq-3\"\n})([\"height:600px;width:50vw;background-color:white;box-shadow:0px 0px 30px rgba(0,0,0,0.3);position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);z-index:10;border-radius:10px;\"]);\nconst Title = styled.h6.withConfig({\n  displayName: \"AddTodoModal__Title\",\n  componentId: \"sc-1wbi0hq-4\"\n})([\"font-size:26px;text-align:center;width:100%;font-family:\\\"Jost\\\";\"]);\nconst ModalItem = styled(FormItem).withConfig({\n  displayName: \"AddTodoModal__ModalItem\",\n  componentId: \"sc-1wbi0hq-5\"\n})([\"color:black;&::placeholder{color:#888888 !important;}\"]);\nconst Horizntally = styled.div.withConfig({\n  displayName: \"AddTodoModal__Horizntally\",\n  componentId: \"sc-1wbi0hq-6\"\n})([\"display:flex;flex-direction:center;& > *{margin:0 5px;}\"]);\nconst months = [\"\", \"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"];\n\nconst AddTodoModal = () => {\n  const dispatch = useDispatch();\n  const userID = useSelector(state => state.Auth.user._id);\n  const open = useSelector(state => state.modal.open);\n\n  const hide = () => {\n    dispatch({\n      type: CLOSE_MODAL\n    });\n  };\n\n  const {\n    setInputs,\n    inputs,\n    handleInputChange\n  } = useForms();\n  const init = useSelector(state => state.modal);\n  useEffect(() => {\n    setInputs(inputs => _objectSpread({}, inputs, {}, init));\n  }, [open]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const body = _objectSpread({}, inputs, {\n      userID\n    });\n\n    dispatch(addTodo(body));\n  };\n\n  if (!open) return null;\n  return __jsx(Container, null, __jsx(BG, {\n    onClick: hide\n  }), __jsx(Box, null, __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Title, null, \"Dodaj Czynno\\u015B\\u0107\"), __jsx(ModalItem, {\n    onChange: handleInputChange,\n    value: inputs.title,\n    name: \"title\",\n    placeholder: \"Tytu\\u0142\"\n  }), __jsx(ModalItem, {\n    placeholder: \"Kr\\xF3tki opis\"\n  }), __jsx(Horizntally, null, __jsx(Select, {\n    name: \"day\",\n    value: inputs.day,\n    onChange: handleInputChange,\n    type: \"number\",\n    title: \"Dzie\\u0144\",\n    startNumber: \"1\",\n    lastNumber: \"30\"\n  }), __jsx(Select, {\n    name: \"month\",\n    value: inputs.month,\n    onChange: handleInputChange,\n    type: \"word\",\n    title: \"Miesi\\u0105c\",\n    options: months\n  }), __jsx(Select, {\n    value: inputs.year,\n    onChange: handleInputChange,\n    type: \"number\",\n    title: \"Rok\",\n    startNumber: \"2020\",\n    lastNumber: \"2023\"\n  })), __jsx(Horizntally, null, __jsx(Select, {\n    name: \"hour\",\n    value: inputs.hour,\n    onChange: handleInputChange,\n    type: \"number\",\n    title: \"Godzina\",\n    startNumber: \"0\",\n    lastNumber: \"24\"\n  }), __jsx(Select, {\n    name: \"minute\",\n    value: inputs.minute,\n    onChange: handleInputChange,\n    type: \"number\",\n    title: \"Minuta\",\n    startNumber: \"0\",\n    lastNumber: \"59\"\n  })), __jsx(\"p\", null, \"Podgl\\u0105d\"), __jsx(Todo, {\n    todos: inputs\n  }), __jsx(SubmitButton, null, \" Dodaj\"))));\n};\n\nexport default AddTodoModal;","map":null,"metadata":{},"sourceType":"module"}