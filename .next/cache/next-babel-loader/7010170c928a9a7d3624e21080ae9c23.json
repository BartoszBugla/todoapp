{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nconst size = \"20px\";\nconst fontSize = \"16px\";\nconst ContainerCheckbox = styled.div.withConfig({\n  displayName: \"Checkbox__ContainerCheckbox\",\n  componentId: \"sc-138643f-0\"\n})([\"display:flex;flex-direction:row;p{margin-left:10px;color:black;font-size:\", \";}\"], fontSize);\nconst Icon = styled.svg.withConfig({\n  displayName: \"Checkbox__Icon\",\n  componentId: \"sc-138643f-1\"\n})([\"fill:none;stroke:white;stroke-width:2px;\"]);\nconst HiddenCheckbox = styled.input.attrs({\n  type: \"checkbox\"\n}).withConfig({\n  displayName: \"Checkbox__HiddenCheckbox\",\n  componentId: \"sc-138643f-2\"\n})([\"border:0;height:\", \";margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:\", \";\"], size, size);\nconst StyledCheckbox = styled.div.withConfig({\n  displayName: \"Checkbox__StyledCheckbox\",\n  componentId: \"sc-138643f-3\"\n})([\"display:inline-block;width:\", \";height:\", \";background:\", \";border:\", \";border-radius:3px;transition:all 150ms;\", \"{visibility:\", \";}\", \":focus,\", \":hover + &{box-shadow:0 0 0 3px pink;}\"], size, size, props => props.checked ? \"salmon\" : \"none\", props => props.checked ? \"\" : \"black solid 1px\", Icon, props => props.checked ? \"visible\" : \"hidden\", HiddenCheckbox, HiddenCheckbox);\n\nconst Checkbox = (_ref) => {\n  let {\n    children,\n    checked\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"checked\"]);\n\n  if (!checked) {\n    checked = false;\n  }\n\n  return __jsx(ContainerCheckbox, null, __jsx(HiddenCheckbox, _extends({\n    checked: checked\n  }, props)), __jsx(StyledCheckbox, {\n    checked: checked\n  }, __jsx(Icon, {\n    viewBox: \"0 0 24 24\"\n  }, __jsx(\"polyline\", {\n    points: \"20 6 9 17 4 12\"\n  }))), __jsx(\"p\", null, children));\n};\n\nexport default Checkbox;","map":null,"metadata":{},"sourceType":"module"}