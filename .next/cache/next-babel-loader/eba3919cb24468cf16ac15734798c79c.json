{"ast":null,"code":"var __jsx = React.createElement;\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport store from \"../redux/store\";\nimport withRedux from \"next-redux-wrapper\";\nimport cookies from \"next-cookies\";\nimport \"../styles.css\";\nimport UserProvider from \"../components/userProvider\";\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  store,\n  token\n}) => {\n  MyApp.getInitialProps = async ({\n    Component,\n    ctx\n  }) => {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    const token = cookies(ctx).token || \"\";\n    console.log(\"anything\"); //Anything returned here can be access by the client\n\n    return {\n      pageProps,\n      token\n    };\n  };\n\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(UserProvider, {\n    token: token\n  }, __jsx(Component, pageProps)));\n}; //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/pages/_app.jsx"],"names":["App","Provider","React","store","withRedux","cookies","UserProvider","MyApp","Component","pageProps","token","getInitialProps","ctx","console","log","makeStore"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBN,EAAAA,KAAxB;AAA+BO,EAAAA;AAA/B,CAAD,KAA4C;AACtDH,EAAAA,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEH,IAAAA,SAAF;AAAaI,IAAAA;AAAb,GAAP,KAA8B;AAClD,UAAMH,SAAS,GAAGD,SAAS,CAACG,eAAV,GAA4B,MAAMH,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CAAlC,GAAmE,EAArF;AAEA,UAAMF,KAAK,GAAGL,OAAO,CAACO,GAAD,CAAP,CAAaF,KAAb,IAAsB,EAApC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAJkD,CAKlD;;AACA,WAAO;AAAEL,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAP;AACH,GAPD;;AASA,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEP;AAAjB,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEO;AAArB,KACI,MAAC,SAAD,EAAeD,SAAf,CADJ,CADJ,CADJ;AAOH,CAjBD,C,CAmBA;;;AACA,MAAMM,SAAS,GAAG,MAAMZ,KAAxB,C,CAEA;;;AACA,eAAeC,SAAS,CAACW,SAAD,CAAT,CAAqBR,KAArB,CAAf","sourcesContent":["import App from \"next/app\";\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport store from \"../redux/store\";\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport cookies from \"next-cookies\";\r\nimport \"../styles.css\";\r\nimport UserProvider from \"../components/userProvider\";\r\nconst MyApp = ({ Component, pageProps, store, token }) => {\r\n    MyApp.getInitialProps = async ({ Component, ctx }) => {\r\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n        const token = cookies(ctx).token || \"\";\r\n        console.log(\"anything\");\r\n        //Anything returned here can be access by the client\r\n        return { pageProps, token };\r\n    };\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <UserProvider token={token}>\r\n                <Component {...pageProps} />\r\n            </UserProvider>\r\n        </Provider>\r\n    );\r\n};\r\n\r\n//makeStore function that returns a new store for every request\r\nconst makeStore = () => store;\r\n\r\n//withRedux wrapper that passes the store to the App Component\r\nexport default withRedux(makeStore)(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}