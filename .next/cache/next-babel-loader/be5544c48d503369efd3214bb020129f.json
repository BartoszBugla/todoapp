{"ast":null,"code":"import { TODO_ADDED, TODOS_LOADED, TODO_DELETED, TODO_EDITED } from \"../actions/types\";\nimport axios from \"axios\";\nexport var loadTodos = function loadTodos(userID, token) {\n  return function (dispatch) {\n    // Todos loading\n    axios.post(\"/todos\", {\n      userID: userID\n    }, tokenConfig(token)).then(function (res) {\n      dispatch({\n        type: TODOS_LOADED,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n};\nexport var addTodo = function addTodo(body, token) {\n  return function (dispatch) {\n    axios.post(\"/todos/add\", body, tokenConfig(token)).then(function (res) {\n      dispatch({\n        type: TODO_ADDED,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n};\nexport var deleteTodo = function deleteTodo(id) {\n  return function (dispatch) {\n    axios[\"delete\"](\"/todos/\".concat(id)).then(function (res) {\n      dispatch({\n        type: TODO_DELETED,\n        payload: id\n      });\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n};\nexport var editTodo = function editTodo(id, body) {\n  return function (dispatch) {\n    axios.patch(\"/todos/\".concat(id), body).then(function (res) {\n      dispatch({\n        type: TODO_EDITED,\n        payload: body,\n        id: id\n      });\n    })[\"catch\"](function (err) {});\n  };\n};\nexport var checkTodo = function checkTodo(id, body) {\n  return function (dispatch) {\n    axios.patch(\"/todos/check/\".concat(id), body).then(function (res) {\n      dispatch({\n        type: TODO_EDITED,\n        payload: body,\n        id: id\n      });\n    })[\"catch\"](function (err) {});\n  };\n}; // Setup config/headers and token\n\nexport var tokenConfig = function tokenConfig(token) {\n  // Headers\n  var config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};","map":null,"metadata":{},"sourceType":"module"}