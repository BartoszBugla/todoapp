{"ast":null,"code":"import { TODO_ADDED, TODOS_LOADED, TODO_DELETED, TODO_EDITED } from \"../actions/types\";\nimport axios from \"axios\";\nexport const loadTodos = (userID, token) => dispatch => {\n  // Tod os loading\n  axios.post(`http://localhost:5000/todos`, {\n    userID\n  }, tokenConfig(token)).then(res => {\n    dispatch({\n      type: TODOS_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const addTodo = (body, token) => dispatch => {\n  // Adding Todos\n  axios.post(`http://localhost:5000/todos/add`, body, tokenConfig(token)).then(res => {\n    dispatch({\n      type: TODO_ADDED,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const deleteTodo = id => dispatch => {\n  // Adding Todos\n  axios.delete(`http://localhost:5000/todos/${id}`).then(res => {\n    dispatch({\n      type: TODO_DELETED,\n      payload: id\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const editTodo = (id, body) => dispatch => {\n  // Adding Todos\n  axios.patch(`http://localhost:5000/todos/${id}`, body).then(res => {\n    dispatch({\n      type: TODO_EDITED,\n      payload: body,\n      id\n    });\n  }).catch(err => {});\n}; // Setup config/headers and token\n\nexport const tokenConfig = token => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/redux/actions/todosActions.js"],"names":["TODO_ADDED","TODOS_LOADED","TODO_DELETED","TODO_EDITED","axios","loadTodos","userID","token","dispatch","post","tokenConfig","then","res","type","payload","data","catch","err","console","log","addTodo","body","deleteTodo","id","delete","editTodo","patch","config","headers"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,YAAnC,EAAiDC,WAAjD,QAAoE,kBAApE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,KAAT,KAAoBC,QAAD,IAAc;AACtD;AAEAJ,EAAAA,KAAK,CACAK,IADL,CACW,6BADX,EACyC;AAAEH,IAAAA;AAAF,GADzC,EACqDI,WAAW,CAACH,KAAD,CADhE,EAEKI,IAFL,CAEWC,GAAD,IAAS;AACXJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,YAAR;AAAsBa,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAAnC,KAAD,CAAR;AACH,GAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAPL;AAQH,CAXM;AAYP,OAAO,MAAMG,OAAO,GAAG,CAACC,IAAD,EAAOd,KAAP,KAAkBC,QAAD,IAAc;AAClD;AAEAJ,EAAAA,KAAK,CACAK,IADL,CACW,iCADX,EAC6CY,IAD7C,EACmDX,WAAW,CAACH,KAAD,CAD9D,EAEKI,IAFL,CAEWC,GAAD,IAAS;AACXJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEb,UAAR;AAAoBc,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAAjC,KAAD,CAAR;AACH,GAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAPL;AAQH,CAXM;AAYP,OAAO,MAAMK,UAAU,GAAIC,EAAD,IAASf,QAAD,IAAc;AAC5C;AAEAJ,EAAAA,KAAK,CACAoB,MADL,CACa,+BAA8BD,EAAG,EAD9C,EAEKZ,IAFL,CAEWC,GAAD,IAAS;AACXJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX,YAAR;AAAsBY,MAAAA,OAAO,EAAES;AAA/B,KAAD,CAAR;AACH,GAJL,EAKKP,KALL,CAKYC,GAAD,IAAS;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAPL;AAQH,CAXM;AAYP,OAAO,MAAMQ,QAAQ,GAAG,CAACF,EAAD,EAAKF,IAAL,KAAeb,QAAD,IAAc;AAChD;AACAJ,EAAAA,KAAK,CACAsB,KADL,CACY,+BAA8BH,EAAG,EAD7C,EACgDF,IADhD,EAEKV,IAFL,CAEWC,GAAD,IAAS;AACXJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEV,WAAR;AAAqBW,MAAAA,OAAO,EAAEO,IAA9B;AAAoCE,MAAAA;AAApC,KAAD,CAAR;AACH,GAJL,EAKKP,KALL,CAKYC,GAAD,IAAS,CAAE,CALtB;AAMH,CARM,C,CASP;;AACA,OAAO,MAAMP,WAAW,GAAIH,KAAD,IAAW;AAClC;AACA,QAAMoB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CAFkC,CAQlC;;AACA,MAAIrB,KAAJ,EAAW;AACPoB,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCrB,KAAjC;AACH;;AAED,SAAOoB,MAAP;AACH,CAdM","sourcesContent":["import { TODO_ADDED, TODOS_LOADED, TODO_DELETED, TODO_EDITED } from \"../actions/types\";\r\nimport axios from \"axios\";\r\nexport const loadTodos = (userID, token) => (dispatch) => {\r\n    // Tod os loading\r\n\r\n    axios\r\n        .post(`http://localhost:5000/todos`, { userID }, tokenConfig(token))\r\n        .then((res) => {\r\n            dispatch({ type: TODOS_LOADED, payload: res.data });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\nexport const addTodo = (body, token) => (dispatch) => {\r\n    // Adding Todos\r\n\r\n    axios\r\n        .post(`http://localhost:5000/todos/add`, body, tokenConfig(token))\r\n        .then((res) => {\r\n            dispatch({ type: TODO_ADDED, payload: res.data });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\nexport const deleteTodo = (id) => (dispatch) => {\r\n    // Adding Todos\r\n\r\n    axios\r\n        .delete(`http://localhost:5000/todos/${id}`)\r\n        .then((res) => {\r\n            dispatch({ type: TODO_DELETED, payload: id });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\nexport const editTodo = (id, body) => (dispatch) => {\r\n    // Adding Todos\r\n    axios\r\n        .patch(`http://localhost:5000/todos/${id}`, body)\r\n        .then((res) => {\r\n            dispatch({ type: TODO_EDITED, payload: body, id });\r\n        })\r\n        .catch((err) => {});\r\n};\r\n// Setup config/headers and token\r\nexport const tokenConfig = (token) => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token;\r\n    }\r\n\r\n    return config;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}