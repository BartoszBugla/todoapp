{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nexport var useForms = function useForms(callback) {\n  var _useState = useState({}),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n\n    if (event.target.type === \"checkbox\") {\n      setInputs(function (inputs) {\n        return _objectSpread({}, inputs, _defineProperty({}, event.target.name, event.target.checked));\n      });\n    } else {\n      setInputs(function (inputs) {\n        return _objectSpread({}, inputs, _defineProperty({}, event.target.name, event.target.value));\n      });\n    }\n  };\n\n  return {\n    handleInputChange: handleInputChange,\n    inputs: inputs,\n    setInputs: setInputs\n  };\n};","map":null,"metadata":{},"sourceType":"module"}