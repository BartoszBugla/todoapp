{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadUser } from \"../redux/actions/authActions\";\nimport { loadTodos } from \"../redux/actions/todosActions\";\nexport default function UserProvider({\n  token,\n  children\n}) {\n  const dispatch = useDispatch();\n  const userID = useSelector(state => state.Auth.user._id);\n  useEffect(() => {\n    if (userID) dispatch(loadTodos(userID, token));\n    if (token) dispatch(loadUser(token));\n    dispatch(clearErrors());\n  }, [userID, token]);\n  return __jsx(\"div\", null, children);\n}","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/components/userProvider.js"],"names":["React","useEffect","useDispatch","useSelector","loadUser","loadTodos","UserProvider","token","children","dispatch","userID","state","Auth","user","_id","clearErrors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAtB,EAA2C;AACtD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,MAAM,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,GAA5B,CAA1B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,MAAJ,EAAYD,QAAQ,CAACJ,SAAS,CAACK,MAAD,EAASH,KAAT,CAAV,CAAR;AACZ,QAAIA,KAAJ,EAAWE,QAAQ,CAACL,QAAQ,CAACG,KAAD,CAAT,CAAR;AAEXE,IAAAA,QAAQ,CAACM,WAAW,EAAZ,CAAR;AACH,GALQ,EAKN,CAACL,MAAD,EAASH,KAAT,CALM,CAAT;AAOA,SAAO,mBAAMC,QAAN,CAAP;AACH","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadUser } from \"../redux/actions/authActions\";\r\nimport { loadTodos } from \"../redux/actions/todosActions\";\r\n\r\nexport default function UserProvider({ token, children }) {\r\n    const dispatch = useDispatch();\r\n    const userID = useSelector((state) => state.Auth.user._id);\r\n\r\n    useEffect(() => {\r\n        if (userID) dispatch(loadTodos(userID, token));\r\n        if (token) dispatch(loadUser(token));\r\n\r\n        dispatch(clearErrors());\r\n    }, [userID, token]);\r\n\r\n    return <div>{children}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}       if (userID) dispatch(loadTodos(userID, token));\r\n        if (token) dispatch(loadUser(token));\r\n\r\n        dispatch(clearErrors());\r\n    }, [userID, token]);\r\n\r\n    return <div>{children}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}