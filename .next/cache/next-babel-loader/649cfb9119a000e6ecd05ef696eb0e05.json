{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\TodoApp\\\\components\\\\dumb\\\\Checkbox.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nvar size = \"20px\";\nvar fontSize = \"16px\";\nvar ContainerCheckbox = styled.div.withConfig({\n  displayName: \"Checkbox__ContainerCheckbox\",\n  componentId: \"cgfy3a-0\"\n})([\"display:flex;flex-direction:row;p{margin-left:10px;color:black;font-size:\", \";}\"], fontSize);\nvar Icon = styled.svg.withConfig({\n  displayName: \"Checkbox__Icon\",\n  componentId: \"cgfy3a-1\"\n})([\"fill:none;stroke:black;stroke-width:2px;\"]);\nvar HiddenCheckbox = styled.input.attrs({\n  type: \"checkbox\"\n}).withConfig({\n  displayName: \"Checkbox__HiddenCheckbox\",\n  componentId: \"cgfy3a-2\"\n})([\"border:0;height:\", \";margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:\", \";\"], size, size);\nvar StyledCheckbox = styled.div.withConfig({\n  displayName: \"Checkbox__StyledCheckbox\",\n  componentId: \"cgfy3a-3\"\n})([\"display:inline-block;width:\", \";height:\", \";background:\", \";border-radius:3px;transition:all 150ms;\", \"{visibility:\", \";}\", \":focus,\", \":hover + &{box-shadow:0 0 0 3px pink;}\"], size, size, function (props) {\n  return props.checked ? \"salmon\" : \"white\";\n}, Icon, function (props) {\n  return props.checked ? \"visible\" : \"hidden\";\n}, HiddenCheckbox, HiddenCheckbox);\n\nvar Checkbox = function Checkbox(_ref) {\n  var children = _ref.children,\n      checked = _ref.checked,\n      props = _objectWithoutProperties(_ref, [\"children\", \"checked\"]);\n\n  if (!checked) {\n    checked = false;\n  }\n\n  return __jsx(ContainerCheckbox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(HiddenCheckbox, _extends({\n    checked: checked\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), __jsx(StyledCheckbox, {\n    checked: checked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    viewBox: \"0 0 24 24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"polyline\", {\n    points: \"20 6 9 17 4 12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, children));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/components/dumb/Checkbox.js"],"names":["React","useState","useEffect","styled","size","fontSize","ContainerCheckbox","div","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","props","checked","Checkbox","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,IAAI,GAAG,MAAb;AACA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,iBAAiB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,wFAMFF,QANE,CAAvB;AASA,IAAMG,IAAI,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,gDAAV;AAKA,IAAMC,cAAc,GAAGP,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAH;AAAA;AAAA;AAAA,oHAENT,IAFM,EAQPA,IARO,CAApB;AAUA,IAAMU,cAAc,GAAGX,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,uLAEPH,IAFO,EAGNA,IAHM,EAIF,UAACW,KAAD;AAAA,SAAYA,KAAK,CAACC,OAAN,GAAgB,QAAhB,GAA2B,OAAvC;AAAA,CAJE,EAOdR,IAPc,EAQE,UAACO,KAAD;AAAA,SAAYA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,QAAxC;AAAA,CARF,EAUdN,cAVc,EAUUA,cAVV,CAApB;;AAeA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBF,OAAwB,QAAxBA,OAAwB;AAAA,MAAZD,KAAY;;AAClD,MAAI,CAACC,OAAL,EAAc;AACVA,IAAAA,OAAO,GAAG,KAAV;AACH;;AACD,SACI,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEA;AAAzB,KAAsCD,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,MAAM,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,QAAJ,CAPJ,CADJ;AAWH,CAfD;;AAiBA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst size = \"20px\";\r\nconst fontSize = \"16px\";\r\nconst ContainerCheckbox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    p {\r\n        margin-left: 10px;\r\n        color: black;\r\n        font-size: ${fontSize};\r\n    }\r\n`;\r\nconst Icon = styled.svg`\r\n    fill: none;\r\n    stroke: black;\r\n    stroke-width: 2px;\r\n`;\r\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n    border: 0;\r\n    height: ${size};\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    width: ${size};\r\n`;\r\nconst StyledCheckbox = styled.div`\r\n    display: inline-block;\r\n    width: ${size};\r\n    height: ${size};\r\n    background: ${(props) => (props.checked ? \"salmon\" : \"white\")};\r\n    border-radius: 3px;\r\n    transition: all 150ms;\r\n    ${Icon} {\r\n        visibility: ${(props) => (props.checked ? \"visible\" : \"hidden\")};\r\n    }\r\n    ${HiddenCheckbox}:focus,${HiddenCheckbox}:hover + & {\r\n        box-shadow: 0 0 0 3px pink;\r\n    }\r\n`;\r\n\r\nconst Checkbox = ({ children, checked, ...props }) => {\r\n    if (!checked) {\r\n        checked = false;\r\n    }\r\n    return (\r\n        <ContainerCheckbox>\r\n            <HiddenCheckbox checked={checked} {...props} />\r\n            <StyledCheckbox checked={checked}>\r\n                <Icon viewBox=\"0 0 24 24\">\r\n                    <polyline points=\"20 6 9 17 4 12\" />\r\n                </Icon>\r\n            </StyledCheckbox>\r\n            <p>{children}</p>\r\n        </ContainerCheckbox>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n"]},"metadata":{},"sourceType":"module"}