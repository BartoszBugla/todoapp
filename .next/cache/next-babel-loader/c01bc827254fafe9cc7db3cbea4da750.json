{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nexport var useForms = function useForms(callback) {\n  var _useState = useState({}),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n\n    if (event.target.type === \"checkbox\") {\n      setInputs(function (inputs) {\n        return _objectSpread({}, inputs, _defineProperty({}, event.target.name, event.target.checked));\n      });\n    } else {\n      setInputs(function (inputs) {\n        return _objectSpread({}, inputs, _defineProperty({}, event.target.name, event.target.value));\n      });\n    }\n  };\n\n  return {\n    handleInputChange: handleInputChange,\n    inputs: inputs,\n    setInputs: setInputs\n  };\n};","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/customHooks/formHook.js"],"names":["React","useState","useForms","callback","inputs","setInputs","handleInputChange","event","persist","target","type","name","checked","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAAA,kBACNF,QAAQ,CAAC,EAAD,CADF;AAAA,MAC3BG,MAD2B;AAAA,MACnBC,SADmB;;AAGlC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACjCA,IAAAA,KAAK,CAACC,OAAN;;AAEA,QAAID,KAAK,CAACE,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AAClCL,MAAAA,SAAS,CAAC,UAACD,MAAD;AAAA,iCACHA,MADG,sBAELG,KAAK,CAACE,MAAN,CAAaE,IAFR,EAEeJ,KAAK,CAACE,MAAN,CAAaG,OAF5B;AAAA,OAAD,CAAT;AAIH,KALD,MAKO;AACHP,MAAAA,SAAS,CAAC,UAACD,MAAD;AAAA,iCACHA,MADG,sBAELG,KAAK,CAACE,MAAN,CAAaE,IAFR,EAEeJ,KAAK,CAACE,MAAN,CAAaI,KAF5B;AAAA,OAAD,CAAT;AAIH;AACJ,GAdD;;AAgBA,SAAO;AACHP,IAAAA,iBAAiB,EAAjBA,iBADG;AAEHF,IAAAA,MAAM,EAANA,MAFG;AAGHC,IAAAA,SAAS,EAATA;AAHG,GAAP;AAKH,CAxBM","sourcesContent":["import React, { useState } from \"react\";\r\nexport const useForms = (callback) => {\r\n    const [inputs, setInputs] = useState({});\r\n\r\n    const handleInputChange = (event) => {\r\n        event.persist();\r\n\r\n        if (event.target.type === \"checkbox\") {\r\n            setInputs((inputs) => ({\r\n                ...inputs,\r\n                [event.target.name]: event.target.checked,\r\n            }));\r\n        } else {\r\n            setInputs((inputs) => ({\r\n                ...inputs,\r\n                [event.target.name]: event.target.value,\r\n            }));\r\n        }\r\n    };\r\n\r\n    return {\r\n        handleInputChange,\r\n        inputs,\r\n        setInputs,\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}