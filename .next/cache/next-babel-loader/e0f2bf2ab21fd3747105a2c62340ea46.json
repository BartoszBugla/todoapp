{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { TODO_ADDED, TODOS_LOADED, TODO_DELETED, TODO_EDITED } from \"../actions/types\";\nexport default function (state = [], action) {\n  switch (action.type) {\n    //can come from form or server\n    case TODO_ADDED:\n      return [...state, action.payload];\n\n    case TODOS_LOADED:\n      return action.payload;\n\n    case TODO_DELETED:\n      const upDatedDelete = state.filter(todo => {\n        return todo._id != action.payload;\n      });\n      return upDatedDelete;\n\n    case TODO_EDITED:\n      const upDatedEdit = state.map(todo => {\n        if (todo._id === action.id) return todo = _objectSpread({}, todo, {}, action.payload);\n        return todo;\n      });\n      return upDatedEdit;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/redux/reducers/todosReducer.js"],"names":["TODO_ADDED","TODOS_LOADED","TODO_DELETED","TODO_EDITED","state","action","type","payload","upDatedDelete","filter","todo","_id","upDatedEdit","map","id"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,YAAnC,EAAiDC,WAAjD,QAAoE,kBAApE;AAEA,eAAe,UAAUC,KAAK,GAAG,EAAlB,EAAsBC,MAAtB,EAA8B;AACzC,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKN,UAAL;AACI,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAKN,YAAL;AACI,aAAOI,MAAM,CAACE,OAAd;;AACJ,SAAKL,YAAL;AACI,YAAMM,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAU;AACzC,eAAOA,IAAI,CAACC,GAAL,IAAYN,MAAM,CAACE,OAA1B;AACH,OAFqB,CAAtB;AAGA,aAAOC,aAAP;;AACJ,SAAKL,WAAL;AACI,YAAMS,WAAW,GAAGR,KAAK,CAACS,GAAN,CAAWH,IAAD,IAAU;AACpC,YAAIA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACS,EAAxB,EAA4B,OAAQJ,IAAI,qBAAQA,IAAR,MAAiBL,MAAM,CAACE,OAAxB,CAAZ;AAC5B,eAAOG,IAAP;AACH,OAHmB,CAApB;AAIA,aAAOE,WAAP;;AAEJ;AACI,aAAOR,KAAP;AAnBR;AAqBH","sourcesContent":["import { TODO_ADDED, TODOS_LOADED, TODO_DELETED, TODO_EDITED } from \"../actions/types\";\r\n\r\nexport default function (state = [], action) {\r\n    switch (action.type) {\r\n        //can come from form or server\r\n        case TODO_ADDED:\r\n            return [...state, action.payload];\r\n        case TODOS_LOADED:\r\n            return action.payload;\r\n        case TODO_DELETED:\r\n            const upDatedDelete = state.filter((todo) => {\r\n                return todo._id != action.payload;\r\n            });\r\n            return upDatedDelete;\r\n        case TODO_EDITED:\r\n            const upDatedEdit = state.map((todo) => {\r\n                if (todo._id === action.id) return (todo = { ...todo, ...action.payload });\r\n                return todo;\r\n            });\r\n            return upDatedEdit;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}