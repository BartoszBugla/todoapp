{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nvar CrossMark = function CrossMark(props) {\n  return __jsx(\"svg\", props, __jsx(\"path\", {\n    d: \"M243.188 182.86L356.32 69.726c12.5-12.5 12.5-32.766 0-45.247L341.238 9.398c-12.504-12.503-32.77-12.503-45.25 0L182.86 122.528 69.727 9.374c-12.5-12.5-32.766-12.5-45.247 0L9.375 24.457c-12.5 12.504-12.5 32.77 0 45.25l113.152 113.152L9.398 295.99c-12.503 12.503-12.503 32.769 0 45.25L24.48 356.32c12.5 12.5 32.766 12.5 45.247 0l113.132-113.132L295.99 356.32c12.503 12.5 32.769 12.5 45.25 0l15.081-15.082c12.5-12.504 12.5-32.77 0-45.25zm0 0\"\n  }));\n};\n\nCrossMark.defaultProps = {\n  height: \"487.595\",\n  viewBox: \"0 0 365.696 365.696\",\n  width: \"487.595\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nimport { useDispatch } from \"react-redux\";\nimport { clearErrors } from \"../../redux/actions/errorActions\";\nexport const ErrorContainer = styled.div.withConfig({\n  displayName: \"Error__ErrorContainer\",\n  componentId: \"tp8mgn-0\"\n})([\"background-color:\", \";padding:5px;transition:250ms ease-in;display:flex;flex-direction:row;align-items:center;text-align:center;width:75%;min-height:35px;p{line-height:100%;}svg{height:15px;width:15px;fill:white;padding:10px;path{fill:black;}}\"], props => props.hidden ? \"\" : \"#fc8f8f\");\nexport const Xdiv = styled.div.withConfig({\n  displayName: \"Error__Xdiv\",\n  componentId: \"tp8mgn-1\"\n})([\"\"]);\n\nconst Error = ({\n  message\n}) => {\n  const dispatch = useDispatch();\n\n  const close = () => {\n    dispatch(clearErrors());\n  };\n\n  if (message) return __jsx(ErrorContainer, null, __jsx(CrossMark, {\n    onClick: close\n  }), __jsx(\"p\", null, \" \", message));\n  return __jsx(ErrorContainer, {\n    hidden: true\n  });\n};\n\nexport default Error;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/components/dumb/Error.js"],"names":["React","styled","CrossMark","useDispatch","clearErrors","ErrorContainer","div","props","hidden","Xdiv","Error","message","dispatch","close"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IACOC,S,YAAAA,S;;;;;;AAAAA,S;;;;;;AACP,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAO,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,4PACFC,KAAD,IAAYA,KAAK,CAACC,MAAN,GAAe,EAAf,GAAoB,SAD7B,CAApB;AAwBP,OAAO,MAAMC,IAAI,GAAGR,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,QAAV;;AAEP,MAAMI,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC3B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,KAAK,GAAG,MAAM;AAChBD,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACH,GAFD;;AAGA,MAAIO,OAAJ,EACI,OACI,MAAC,cAAD,QACI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEE;AAApB,IADJ,EAGI,sBAAKF,OAAL,CAHJ,CADJ;AAOJ,SAAO,MAAC,cAAD;AAAgB,IAAA,MAAM;AAAtB,IAAP;AACH,CAdD;;AAgBA,eAAeD,KAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CrossMark from \"../svg/close.svg\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearErrors } from \"../../redux/actions/errorActions\";\r\nexport const ErrorContainer = styled.div`\r\n    background-color: ${(props) => (props.hidden ? \"\" : \"#fc8f8f\")};\r\n    padding: 5px;\r\n    transition: 250ms ease-in;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 75%;\r\n    min-height: 35px;\r\n\r\n    p {\r\n        line-height: 100%;\r\n    }\r\n    svg {\r\n        height: 15px;\r\n        width: 15px;\r\n        fill: white;\r\n        padding: 10px;\r\n        path {\r\n            fill: black;\r\n        }\r\n    }\r\n`;\r\nexport const Xdiv = styled.div``;\r\n\r\nconst Error = ({ message }) => {\r\n    const dispatch = useDispatch();\r\n    const close = () => {\r\n        dispatch(clearErrors());\r\n    };\r\n    if (message)\r\n        return (\r\n            <ErrorContainer>\r\n                <CrossMark onClick={close} />\r\n\r\n                <p> {message}</p>\r\n            </ErrorContainer>\r\n        );\r\n    return <ErrorContainer hidden />;\r\n};\r\n\r\nexport default Error;\r\n"]},"metadata":{},"sourceType":"module"}