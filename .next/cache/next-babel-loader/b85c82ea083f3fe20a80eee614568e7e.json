{"ast":null,"code":"import { TODO_ADDED, TODOS_LOADED, TODO_DELETED, TODO_EDITED } from \"../actions/types\";\nimport axios from \"axios\";\nexport const loadTodos = (userID, token) => dispatch => {\n  // Todos loading\n  axios.post(`/todos`, {\n    userID\n  }, tokenConfig(token)).then(res => {\n    dispatch({\n      type: TODOS_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const addTodo = (body, token) => dispatch => {\n  axios.post(`/todos/add`, body, tokenConfig(token)).then(res => {\n    dispatch({\n      type: TODO_ADDED,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const deleteTodo = id => dispatch => {\n  axios.delete(`/todos/${id}`).then(res => {\n    dispatch({\n      type: TODO_DELETED,\n      payload: id\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const editTodo = (id, body) => dispatch => {\n  axios.patch(`/todos/${id}`, body).then(res => {\n    dispatch({\n      type: TODO_EDITED,\n      payload: body,\n      id\n    });\n  }).catch(err => {});\n};\nexport const checkTodo = (id, body) => dispatch => {\n  axios.patch(`/todos/check/${id}`, body).then(res => {\n    dispatch({\n      type: TODO_EDITED,\n      payload: body,\n      id\n    });\n  }).catch(err => {});\n}; // Setup config/headers and token\n\nexport const tokenConfig = token => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};","map":null,"metadata":{},"sourceType":"module"}