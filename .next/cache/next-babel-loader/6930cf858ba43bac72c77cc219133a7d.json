{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from \"./types\";\nimport { returnErrors } from \"./errorActions\"; // Check token & load user\n\nexport var loadUser = function loadUser(token) {\n  return function (dispatch) {\n    // User loading\n    dispatch({\n      type: USER_LOADING\n    });\n    axios.post(\"http://localhost:5000/users\", {}, tokenConfig(token)).then(function (res) {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n        token: token\n      });\n    })[\"catch\"](function (err) {});\n  };\n};\nexport var register = function register(items) {\n  return function (dispatch) {\n    // Headers\n    var config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }; // Request body\n    //always check it out\n\n    var body = JSON.stringify(items);\n    axios.post(\"http://localhost:5000/users/register\", body, config).then(function (res) {\n      return dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: REGISTER_FAIL\n      });\n      if (err) dispatch(returnErrors(err.response.data));\n    });\n  };\n}; // Login User\n\nexport var login = function login(payload) {\n  return function (dispatch) {\n    // Headers\n    var config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }; // Request body\n\n    var body = JSON.stringify(payload);\n    axios.post(\"http://localhost:5000/users/login\", body, config).then(function (res) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      console.log(err);\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      if (err) dispatch(returnErrors(err.response.data));\n    });\n  };\n}; // Logout User\n\nexport var logout = function logout(type) {\n  console.log(\"action\");\n  return {\n    type: LOGOUT_SUCCESS\n  };\n}; // Setup config/headers and token\n\nexport var tokenConfig = function tokenConfig(token) {\n  // Headers\n  var config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/redux/actions/authActions.js"],"names":["axios","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","returnErrors","loadUser","token","dispatch","type","post","tokenConfig","then","res","payload","data","err","register","items","config","headers","body","JSON","stringify","response","login","console","log","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from \"./types\";\r\nimport { returnErrors } from \"./errorActions\";\r\n// Check token & load user\r\nexport const loadUser = (token) => (dispatch) => {\r\n    // User loading\r\n\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n        .post(\"http://localhost:5000/users\", {}, tokenConfig(token))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data,\r\n                token: token,\r\n            });\r\n        })\r\n        .catch((err) => {});\r\n};\r\nexport const register = (items) => (dispatch) => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    // Request body\r\n    //always check it out\r\n    const body = JSON.stringify(items);\r\n\r\n    axios\r\n        .post(\"http://localhost:5000/users/register\", body, config)\r\n        .then((res) =>\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data,\r\n            })\r\n        )\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n            });\r\n            if (err) dispatch(returnErrors(err.response.data));\r\n        });\r\n};\r\n// Login User\r\nexport const login = (payload) => (dispatch) => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // Request body\r\n    const body = JSON.stringify(payload);\r\n\r\n    axios\r\n        .post(\"http://localhost:5000/users/login\", body, config)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            });\r\n            if (err) dispatch(returnErrors(err.response.data));\r\n        });\r\n};\r\n// Logout User\r\nexport const logout = (type) => {\r\n    console.log(\"action\");\r\n    return {\r\n        type: LOGOUT_SUCCESS,\r\n    };\r\n};\r\n// Setup config/headers and token\r\nexport const tokenConfig = (token) => {\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token;\r\n    }\r\n\r\n    return config;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}