{"ast":null,"code":"import { TODO_ADDED, TODOS_LOADED, TODO_DELETED, TODO_EDITED } from \"../actions/types\";\nexport default function (state = [], action) {\n  console.log(\"lol\");\n\n  switch (action.type) {\n    //can come from form or server\n    case TODO_ADDED:\n      return [...state, action.payload];\n\n    case TODOS_LOADED:\n      return action.payload;\n\n    case TODO_DELETED:\n      const upDatedDelete = state.filter(todo => {\n        return todo._id != action.payload;\n      });\n      return upDatedDelete;\n    // case TODO_EDITED:\n    // const upDatedEdit = state.map((todo) => {\n    //     if (todo._id === action.id) return (todo = { ...todo, ...action.payload });\n    //     return todo;\n    // });\n    // return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/TodoApp/redux/reducers/todosReducer.js"],"names":["TODO_ADDED","TODOS_LOADED","TODO_DELETED","TODO_EDITED","state","action","console","log","type","payload","upDatedDelete","filter","todo","_id"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,YAAnC,EAAiDC,WAAjD,QAAoE,kBAApE;AAEA,eAAe,UAAUC,KAAK,GAAG,EAAlB,EAAsBC,MAAtB,EAA8B;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,UAAQF,MAAM,CAACG,IAAf;AACI;AACA,SAAKR,UAAL;AACI,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACI,OAAlB,CAAP;;AACJ,SAAKR,YAAL;AACI,aAAOI,MAAM,CAACI,OAAd;;AACJ,SAAKP,YAAL;AACI,YAAMQ,aAAa,GAAGN,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAU;AACzC,eAAOA,IAAI,CAACC,GAAL,IAAYR,MAAM,CAACI,OAA1B;AACH,OAFqB,CAAtB;AAGA,aAAOC,aAAP;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACI,aAAON,KAAP;AAnBR;AAqBH","sourcesContent":["import { TODO_ADDED, TODOS_LOADED, TODO_DELETED, TODO_EDITED } from \"../actions/types\";\r\n\r\nexport default function (state = [], action) {\r\n    console.log(\"lol\");\r\n    switch (action.type) {\r\n        //can come from form or server\r\n        case TODO_ADDED:\r\n            return [...state, action.payload];\r\n        case TODOS_LOADED:\r\n            return action.payload;\r\n        case TODO_DELETED:\r\n            const upDatedDelete = state.filter((todo) => {\r\n                return todo._id != action.payload;\r\n            });\r\n            return upDatedDelete;\r\n        // case TODO_EDITED:\r\n        // const upDatedEdit = state.map((todo) => {\r\n        //     if (todo._id === action.id) return (todo = { ...todo, ...action.payload });\r\n        //     return todo;\r\n        // });\r\n        // return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}